Papers:
When Saliency Meets Sentiment: Understanding How Image Content Invokes Emotion and Sentiment

1. Very very good result, code available on github
   Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields

2. Deep Feature Flow for Video Recognition
  code: https://github.com/msracver/Deep-Feature-Flow
  Fast object detection and segmentation in a video. 
  22.25fps reported on the Cityscapes andImageNet VID dataset with NVIDIA K40 GPU and Intel Core i7-4790 CPU.
  The naive per-frame method runs 4.05 fps.
  Comparsion between the naive method, which can be seen as any state of the art segmentation and detection algorithom perform on every frame,
  and the proposed method, is as follwing:
                per-frame    proposed    dataset
  detection       73.9        73.1       ImageNet VID
  segmetation     71.1        69.2       Cityscapes
  I think the small loss of accuracy can be ingored.

3. One-Shot Video Object Segmentation
   code: http://www.vision.ee.ethz.ch/~cvlsegmentation/osvos/

4. Zero-Shot Learning - The Good, the Bad and the Ugly
  Many zero-shot got very very bad result in the wild, only good at the dataset the authors used.
  The author tried almost all zero shot methods and released code at  https://www.mpi-inf.mpg.de/departments/computer-vision-and-multimodal-computing/research/zero-shot-learning/zero-shot-learning-the-good-the-bad-and-the-ugly/

5. Deep Image Matting
   Code(implenmented a baidu engineer): https://github.com/Joker316701882/Deep-Image-Matting
   The code is easy to run: having tensorflow prepared, download the pretrained model, then run it.
   His comment here: http://blog.leanote.com/post/calebge/Deep-Image-Matting%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93

5. Focal Loss for Dense Object Detection
   Unoffical code: https://github.com/unsky/focal-loss
   
6. Understanding Black-box Predictions via Influence Functions
   Someone's comment: https://github.com/eolecvk/InfluenceFunctions/blob/master/review.pdf
   Another comment: http://nooverfit.com/wp/icml-2017%E8%AE%BA%E6%96%87%E7%B2%BE%E9%80%891-%E7%94%A8%E5%BD%B1%E5%93%8D%E5%87%BD%E6%95%B0%E7%90%86%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E9%BB%91%E7%9B%92%E9%A2%84/
7. Convexified Convolutional Neural Networks
   official code: https://github.com/zhangyuc/CCNN

8. On Calibration of Modern Neural Networks
   [来自知乎] 也是在deep learning session, 也是百分之百的实验。不过它报告了一个俺从来没有注意过的有趣现象：
   基于深度网络的分类器输出的class label probability 都over-confident；而这种现象在浅层网络中并不存在。这后面没准有东西可以挖一挖。

9. Learned Invariant Feature Transform
   Use CNN to generate key point descriptors.
   Code: https://github.com/cvlab-epfl/LIFT

   

Githubs:
Openai's platform that you can write your code to play game, then test with this platform. I think it can reduce a lot of your time.
https://github.com/openai/universe

Neural Complete
Use a network to generate another network, the generated network is in Python keras code.
https://github.com/kootenpv/neural_complete


Websites:
1. 如何学习统计学，或我的学习之路——初学者写给初学者
https://cosx.org/2008/11/how-to-learn-statistics-by-jthu/
讲的挺对我的胃口的，感觉这才是真的学习科学的方法。

2. Funny: "Tips on publishing in NIPS, ICML or any top tier conferences for ML"
https://www.reddit.com/r/MachineLearning/comments/3x3urc/tips_on_publishing_in_nips_icml_or_any_top_tier/

3. Changing gazes of people in photos
You can test it online. I tested with my own photo, amazing result
http://163.172.78.19/

4. deep-learning-most-amazing-applications
http://www.yaronhadad.com/deep-learning-most-amazing-applications/

5. Comments on many CVPR2017 papers
http://blog.csdn.net/zhangjunhit/article/category/6801399

6. a blog on MXNET: simple introduction
http://blog.csdn.net/u013713010/article/details/71635814http://blog.csdn.net/u013713010/article/details/71635814

7. comments on CVPR 2017
https://medium.com/@Synced/cvpr-2017-the-fusion-of-deep-learning-and-computer-vision-whats-next-f4d8e9efe2c

8. 图像拼接近年发展，介绍了各个主要方法的核心内容，写的很好
https://www.zhihu.com/question/34535199/answer/135169187
